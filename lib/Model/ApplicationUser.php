<?php
/**
 * ApplicationUser
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * BCFLEX API
 *
 * BCFLEX Public API Documentation
 *
 * The version of the OpenAPI document: v1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ApplicationUser Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class ApplicationUser implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ApplicationUser';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'user_name' => 'string',
        'normalized_user_name' => 'string',
        'email' => 'string',
        'normalized_email' => 'string',
        'email_confirmed' => 'bool',
        'password_hash' => 'string',
        'security_stamp' => 'string',
        'concurrency_stamp' => 'string',
        'phone_number' => 'string',
        'phone_number_confirmed' => 'bool',
        'two_factor_enabled' => 'bool',
        'lockout_end' => '\DateTime',
        'lockout_enabled' => 'bool',
        'access_failed_count' => 'int',
        'fullname' => 'string',
        'pin_code' => 'string',
        'last_ip_access' => 'string',
        'last_date_access' => 'int',
        'is_chat_disabled' => 'bool',
        'maker_fee' => 'double',
        'taker_fee' => 'double',
        'category' => '\OpenAPI\Client\Model\UserCategory',
        'is_google_sign_in_allowed' => 'bool',
        'is_facebook_sign_in_allowed' => 'bool',
        'registration_date_time' => 'int',
        'verification_level' => 'int',
        'two_step_verification_type' => '\OpenAPI\Client\Model\TwoStepVerificationTypes',
        'two_step_backup_code' => 'string',
        'kyc_sefile_blob_guid' => 'string',
        'kyc_passport_blob_guid' => 'string',
        'is_club_account' => 'bool',
        'withdraw_locked_till' => 'int',
        'ref_id' => 'string',
        'session_life_time' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => null,
        'user_name' => null,
        'normalized_user_name' => null,
        'email' => null,
        'normalized_email' => null,
        'email_confirmed' => null,
        'password_hash' => null,
        'security_stamp' => null,
        'concurrency_stamp' => null,
        'phone_number' => null,
        'phone_number_confirmed' => null,
        'two_factor_enabled' => null,
        'lockout_end' => 'date-time',
        'lockout_enabled' => null,
        'access_failed_count' => 'int32',
        'fullname' => null,
        'pin_code' => null,
        'last_ip_access' => null,
        'last_date_access' => 'int64',
        'is_chat_disabled' => null,
        'maker_fee' => 'double',
        'taker_fee' => 'double',
        'category' => null,
        'is_google_sign_in_allowed' => null,
        'is_facebook_sign_in_allowed' => null,
        'registration_date_time' => 'int64',
        'verification_level' => 'int32',
        'two_step_verification_type' => null,
        'two_step_backup_code' => null,
        'kyc_sefile_blob_guid' => null,
        'kyc_passport_blob_guid' => null,
        'is_club_account' => null,
        'withdraw_locked_till' => 'int64',
        'ref_id' => null,
        'session_life_time' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'user_name' => 'userName',
        'normalized_user_name' => 'normalizedUserName',
        'email' => 'email',
        'normalized_email' => 'normalizedEmail',
        'email_confirmed' => 'emailConfirmed',
        'password_hash' => 'passwordHash',
        'security_stamp' => 'securityStamp',
        'concurrency_stamp' => 'concurrencyStamp',
        'phone_number' => 'phoneNumber',
        'phone_number_confirmed' => 'phoneNumberConfirmed',
        'two_factor_enabled' => 'twoFactorEnabled',
        'lockout_end' => 'lockoutEnd',
        'lockout_enabled' => 'lockoutEnabled',
        'access_failed_count' => 'accessFailedCount',
        'fullname' => 'fullname',
        'pin_code' => 'pinCode',
        'last_ip_access' => 'lastIPAccess',
        'last_date_access' => 'lastDateAccess',
        'is_chat_disabled' => 'isChatDisabled',
        'maker_fee' => 'makerFee',
        'taker_fee' => 'takerFee',
        'category' => 'category',
        'is_google_sign_in_allowed' => 'isGoogleSignInAllowed',
        'is_facebook_sign_in_allowed' => 'isFacebookSignInAllowed',
        'registration_date_time' => 'registrationDateTime',
        'verification_level' => 'verificationLevel',
        'two_step_verification_type' => 'twoStepVerificationType',
        'two_step_backup_code' => 'twoStepBackupCode',
        'kyc_sefile_blob_guid' => 'kycSefileBlobGuid',
        'kyc_passport_blob_guid' => 'kycPassportBlobGuid',
        'is_club_account' => 'isClubAccount',
        'withdraw_locked_till' => 'withdrawLockedTill',
        'ref_id' => 'refId',
        'session_life_time' => 'sessionLifeTime'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'user_name' => 'setUserName',
        'normalized_user_name' => 'setNormalizedUserName',
        'email' => 'setEmail',
        'normalized_email' => 'setNormalizedEmail',
        'email_confirmed' => 'setEmailConfirmed',
        'password_hash' => 'setPasswordHash',
        'security_stamp' => 'setSecurityStamp',
        'concurrency_stamp' => 'setConcurrencyStamp',
        'phone_number' => 'setPhoneNumber',
        'phone_number_confirmed' => 'setPhoneNumberConfirmed',
        'two_factor_enabled' => 'setTwoFactorEnabled',
        'lockout_end' => 'setLockoutEnd',
        'lockout_enabled' => 'setLockoutEnabled',
        'access_failed_count' => 'setAccessFailedCount',
        'fullname' => 'setFullname',
        'pin_code' => 'setPinCode',
        'last_ip_access' => 'setLastIpAccess',
        'last_date_access' => 'setLastDateAccess',
        'is_chat_disabled' => 'setIsChatDisabled',
        'maker_fee' => 'setMakerFee',
        'taker_fee' => 'setTakerFee',
        'category' => 'setCategory',
        'is_google_sign_in_allowed' => 'setIsGoogleSignInAllowed',
        'is_facebook_sign_in_allowed' => 'setIsFacebookSignInAllowed',
        'registration_date_time' => 'setRegistrationDateTime',
        'verification_level' => 'setVerificationLevel',
        'two_step_verification_type' => 'setTwoStepVerificationType',
        'two_step_backup_code' => 'setTwoStepBackupCode',
        'kyc_sefile_blob_guid' => 'setKycSefileBlobGuid',
        'kyc_passport_blob_guid' => 'setKycPassportBlobGuid',
        'is_club_account' => 'setIsClubAccount',
        'withdraw_locked_till' => 'setWithdrawLockedTill',
        'ref_id' => 'setRefId',
        'session_life_time' => 'setSessionLifeTime'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'user_name' => 'getUserName',
        'normalized_user_name' => 'getNormalizedUserName',
        'email' => 'getEmail',
        'normalized_email' => 'getNormalizedEmail',
        'email_confirmed' => 'getEmailConfirmed',
        'password_hash' => 'getPasswordHash',
        'security_stamp' => 'getSecurityStamp',
        'concurrency_stamp' => 'getConcurrencyStamp',
        'phone_number' => 'getPhoneNumber',
        'phone_number_confirmed' => 'getPhoneNumberConfirmed',
        'two_factor_enabled' => 'getTwoFactorEnabled',
        'lockout_end' => 'getLockoutEnd',
        'lockout_enabled' => 'getLockoutEnabled',
        'access_failed_count' => 'getAccessFailedCount',
        'fullname' => 'getFullname',
        'pin_code' => 'getPinCode',
        'last_ip_access' => 'getLastIpAccess',
        'last_date_access' => 'getLastDateAccess',
        'is_chat_disabled' => 'getIsChatDisabled',
        'maker_fee' => 'getMakerFee',
        'taker_fee' => 'getTakerFee',
        'category' => 'getCategory',
        'is_google_sign_in_allowed' => 'getIsGoogleSignInAllowed',
        'is_facebook_sign_in_allowed' => 'getIsFacebookSignInAllowed',
        'registration_date_time' => 'getRegistrationDateTime',
        'verification_level' => 'getVerificationLevel',
        'two_step_verification_type' => 'getTwoStepVerificationType',
        'two_step_backup_code' => 'getTwoStepBackupCode',
        'kyc_sefile_blob_guid' => 'getKycSefileBlobGuid',
        'kyc_passport_blob_guid' => 'getKycPassportBlobGuid',
        'is_club_account' => 'getIsClubAccount',
        'withdraw_locked_till' => 'getWithdrawLockedTill',
        'ref_id' => 'getRefId',
        'session_life_time' => 'getSessionLifeTime'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['user_name'] = $data['user_name'] ?? null;
        $this->container['normalized_user_name'] = $data['normalized_user_name'] ?? null;
        $this->container['email'] = $data['email'] ?? null;
        $this->container['normalized_email'] = $data['normalized_email'] ?? null;
        $this->container['email_confirmed'] = $data['email_confirmed'] ?? null;
        $this->container['password_hash'] = $data['password_hash'] ?? null;
        $this->container['security_stamp'] = $data['security_stamp'] ?? null;
        $this->container['concurrency_stamp'] = $data['concurrency_stamp'] ?? null;
        $this->container['phone_number'] = $data['phone_number'] ?? null;
        $this->container['phone_number_confirmed'] = $data['phone_number_confirmed'] ?? null;
        $this->container['two_factor_enabled'] = $data['two_factor_enabled'] ?? null;
        $this->container['lockout_end'] = $data['lockout_end'] ?? null;
        $this->container['lockout_enabled'] = $data['lockout_enabled'] ?? null;
        $this->container['access_failed_count'] = $data['access_failed_count'] ?? null;
        $this->container['fullname'] = $data['fullname'] ?? null;
        $this->container['pin_code'] = $data['pin_code'] ?? null;
        $this->container['last_ip_access'] = $data['last_ip_access'] ?? null;
        $this->container['last_date_access'] = $data['last_date_access'] ?? null;
        $this->container['is_chat_disabled'] = $data['is_chat_disabled'] ?? null;
        $this->container['maker_fee'] = $data['maker_fee'] ?? null;
        $this->container['taker_fee'] = $data['taker_fee'] ?? null;
        $this->container['category'] = $data['category'] ?? null;
        $this->container['is_google_sign_in_allowed'] = $data['is_google_sign_in_allowed'] ?? null;
        $this->container['is_facebook_sign_in_allowed'] = $data['is_facebook_sign_in_allowed'] ?? null;
        $this->container['registration_date_time'] = $data['registration_date_time'] ?? null;
        $this->container['verification_level'] = $data['verification_level'] ?? null;
        $this->container['two_step_verification_type'] = $data['two_step_verification_type'] ?? null;
        $this->container['two_step_backup_code'] = $data['two_step_backup_code'] ?? null;
        $this->container['kyc_sefile_blob_guid'] = $data['kyc_sefile_blob_guid'] ?? null;
        $this->container['kyc_passport_blob_guid'] = $data['kyc_passport_blob_guid'] ?? null;
        $this->container['is_club_account'] = $data['is_club_account'] ?? null;
        $this->container['withdraw_locked_till'] = $data['withdraw_locked_till'] ?? null;
        $this->container['ref_id'] = $data['ref_id'] ?? null;
        $this->container['session_life_time'] = $data['session_life_time'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets user_name
     *
     * @return string|null
     */
    public function getUserName()
    {
        return $this->container['user_name'];
    }

    /**
     * Sets user_name
     *
     * @param string|null $user_name user_name
     *
     * @return self
     */
    public function setUserName($user_name)
    {
        $this->container['user_name'] = $user_name;

        return $this;
    }

    /**
     * Gets normalized_user_name
     *
     * @return string|null
     */
    public function getNormalizedUserName()
    {
        return $this->container['normalized_user_name'];
    }

    /**
     * Sets normalized_user_name
     *
     * @param string|null $normalized_user_name normalized_user_name
     *
     * @return self
     */
    public function setNormalizedUserName($normalized_user_name)
    {
        $this->container['normalized_user_name'] = $normalized_user_name;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string|null $email email
     *
     * @return self
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets normalized_email
     *
     * @return string|null
     */
    public function getNormalizedEmail()
    {
        return $this->container['normalized_email'];
    }

    /**
     * Sets normalized_email
     *
     * @param string|null $normalized_email normalized_email
     *
     * @return self
     */
    public function setNormalizedEmail($normalized_email)
    {
        $this->container['normalized_email'] = $normalized_email;

        return $this;
    }

    /**
     * Gets email_confirmed
     *
     * @return bool|null
     */
    public function getEmailConfirmed()
    {
        return $this->container['email_confirmed'];
    }

    /**
     * Sets email_confirmed
     *
     * @param bool|null $email_confirmed email_confirmed
     *
     * @return self
     */
    public function setEmailConfirmed($email_confirmed)
    {
        $this->container['email_confirmed'] = $email_confirmed;

        return $this;
    }

    /**
     * Gets password_hash
     *
     * @return string|null
     */
    public function getPasswordHash()
    {
        return $this->container['password_hash'];
    }

    /**
     * Sets password_hash
     *
     * @param string|null $password_hash password_hash
     *
     * @return self
     */
    public function setPasswordHash($password_hash)
    {
        $this->container['password_hash'] = $password_hash;

        return $this;
    }

    /**
     * Gets security_stamp
     *
     * @return string|null
     */
    public function getSecurityStamp()
    {
        return $this->container['security_stamp'];
    }

    /**
     * Sets security_stamp
     *
     * @param string|null $security_stamp security_stamp
     *
     * @return self
     */
    public function setSecurityStamp($security_stamp)
    {
        $this->container['security_stamp'] = $security_stamp;

        return $this;
    }

    /**
     * Gets concurrency_stamp
     *
     * @return string|null
     */
    public function getConcurrencyStamp()
    {
        return $this->container['concurrency_stamp'];
    }

    /**
     * Sets concurrency_stamp
     *
     * @param string|null $concurrency_stamp concurrency_stamp
     *
     * @return self
     */
    public function setConcurrencyStamp($concurrency_stamp)
    {
        $this->container['concurrency_stamp'] = $concurrency_stamp;

        return $this;
    }

    /**
     * Gets phone_number
     *
     * @return string|null
     */
    public function getPhoneNumber()
    {
        return $this->container['phone_number'];
    }

    /**
     * Sets phone_number
     *
     * @param string|null $phone_number phone_number
     *
     * @return self
     */
    public function setPhoneNumber($phone_number)
    {
        $this->container['phone_number'] = $phone_number;

        return $this;
    }

    /**
     * Gets phone_number_confirmed
     *
     * @return bool|null
     */
    public function getPhoneNumberConfirmed()
    {
        return $this->container['phone_number_confirmed'];
    }

    /**
     * Sets phone_number_confirmed
     *
     * @param bool|null $phone_number_confirmed phone_number_confirmed
     *
     * @return self
     */
    public function setPhoneNumberConfirmed($phone_number_confirmed)
    {
        $this->container['phone_number_confirmed'] = $phone_number_confirmed;

        return $this;
    }

    /**
     * Gets two_factor_enabled
     *
     * @return bool|null
     */
    public function getTwoFactorEnabled()
    {
        return $this->container['two_factor_enabled'];
    }

    /**
     * Sets two_factor_enabled
     *
     * @param bool|null $two_factor_enabled two_factor_enabled
     *
     * @return self
     */
    public function setTwoFactorEnabled($two_factor_enabled)
    {
        $this->container['two_factor_enabled'] = $two_factor_enabled;

        return $this;
    }

    /**
     * Gets lockout_end
     *
     * @return \DateTime|null
     */
    public function getLockoutEnd()
    {
        return $this->container['lockout_end'];
    }

    /**
     * Sets lockout_end
     *
     * @param \DateTime|null $lockout_end lockout_end
     *
     * @return self
     */
    public function setLockoutEnd($lockout_end)
    {
        $this->container['lockout_end'] = $lockout_end;

        return $this;
    }

    /**
     * Gets lockout_enabled
     *
     * @return bool|null
     */
    public function getLockoutEnabled()
    {
        return $this->container['lockout_enabled'];
    }

    /**
     * Sets lockout_enabled
     *
     * @param bool|null $lockout_enabled lockout_enabled
     *
     * @return self
     */
    public function setLockoutEnabled($lockout_enabled)
    {
        $this->container['lockout_enabled'] = $lockout_enabled;

        return $this;
    }

    /**
     * Gets access_failed_count
     *
     * @return int|null
     */
    public function getAccessFailedCount()
    {
        return $this->container['access_failed_count'];
    }

    /**
     * Sets access_failed_count
     *
     * @param int|null $access_failed_count access_failed_count
     *
     * @return self
     */
    public function setAccessFailedCount($access_failed_count)
    {
        $this->container['access_failed_count'] = $access_failed_count;

        return $this;
    }

    /**
     * Gets fullname
     *
     * @return string|null
     */
    public function getFullname()
    {
        return $this->container['fullname'];
    }

    /**
     * Sets fullname
     *
     * @param string|null $fullname fullname
     *
     * @return self
     */
    public function setFullname($fullname)
    {
        $this->container['fullname'] = $fullname;

        return $this;
    }

    /**
     * Gets pin_code
     *
     * @return string|null
     */
    public function getPinCode()
    {
        return $this->container['pin_code'];
    }

    /**
     * Sets pin_code
     *
     * @param string|null $pin_code pin_code
     *
     * @return self
     */
    public function setPinCode($pin_code)
    {
        $this->container['pin_code'] = $pin_code;

        return $this;
    }

    /**
     * Gets last_ip_access
     *
     * @return string|null
     */
    public function getLastIpAccess()
    {
        return $this->container['last_ip_access'];
    }

    /**
     * Sets last_ip_access
     *
     * @param string|null $last_ip_access last_ip_access
     *
     * @return self
     */
    public function setLastIpAccess($last_ip_access)
    {
        $this->container['last_ip_access'] = $last_ip_access;

        return $this;
    }

    /**
     * Gets last_date_access
     *
     * @return int|null
     */
    public function getLastDateAccess()
    {
        return $this->container['last_date_access'];
    }

    /**
     * Sets last_date_access
     *
     * @param int|null $last_date_access last_date_access
     *
     * @return self
     */
    public function setLastDateAccess($last_date_access)
    {
        $this->container['last_date_access'] = $last_date_access;

        return $this;
    }

    /**
     * Gets is_chat_disabled
     *
     * @return bool|null
     */
    public function getIsChatDisabled()
    {
        return $this->container['is_chat_disabled'];
    }

    /**
     * Sets is_chat_disabled
     *
     * @param bool|null $is_chat_disabled is_chat_disabled
     *
     * @return self
     */
    public function setIsChatDisabled($is_chat_disabled)
    {
        $this->container['is_chat_disabled'] = $is_chat_disabled;

        return $this;
    }

    /**
     * Gets maker_fee
     *
     * @return double|null
     */
    public function getMakerFee()
    {
        return $this->container['maker_fee'];
    }

    /**
     * Sets maker_fee
     *
     * @param double|null $maker_fee maker_fee
     *
     * @return self
     */
    public function setMakerFee($maker_fee)
    {
        $this->container['maker_fee'] = $maker_fee;

        return $this;
    }

    /**
     * Gets taker_fee
     *
     * @return double|null
     */
    public function getTakerFee()
    {
        return $this->container['taker_fee'];
    }

    /**
     * Sets taker_fee
     *
     * @param double|null $taker_fee taker_fee
     *
     * @return self
     */
    public function setTakerFee($taker_fee)
    {
        $this->container['taker_fee'] = $taker_fee;

        return $this;
    }

    /**
     * Gets category
     *
     * @return \OpenAPI\Client\Model\UserCategory|null
     */
    public function getCategory()
    {
        return $this->container['category'];
    }

    /**
     * Sets category
     *
     * @param \OpenAPI\Client\Model\UserCategory|null $category category
     *
     * @return self
     */
    public function setCategory($category)
    {
        $this->container['category'] = $category;

        return $this;
    }

    /**
     * Gets is_google_sign_in_allowed
     *
     * @return bool|null
     */
    public function getIsGoogleSignInAllowed()
    {
        return $this->container['is_google_sign_in_allowed'];
    }

    /**
     * Sets is_google_sign_in_allowed
     *
     * @param bool|null $is_google_sign_in_allowed is_google_sign_in_allowed
     *
     * @return self
     */
    public function setIsGoogleSignInAllowed($is_google_sign_in_allowed)
    {
        $this->container['is_google_sign_in_allowed'] = $is_google_sign_in_allowed;

        return $this;
    }

    /**
     * Gets is_facebook_sign_in_allowed
     *
     * @return bool|null
     */
    public function getIsFacebookSignInAllowed()
    {
        return $this->container['is_facebook_sign_in_allowed'];
    }

    /**
     * Sets is_facebook_sign_in_allowed
     *
     * @param bool|null $is_facebook_sign_in_allowed is_facebook_sign_in_allowed
     *
     * @return self
     */
    public function setIsFacebookSignInAllowed($is_facebook_sign_in_allowed)
    {
        $this->container['is_facebook_sign_in_allowed'] = $is_facebook_sign_in_allowed;

        return $this;
    }

    /**
     * Gets registration_date_time
     *
     * @return int|null
     */
    public function getRegistrationDateTime()
    {
        return $this->container['registration_date_time'];
    }

    /**
     * Sets registration_date_time
     *
     * @param int|null $registration_date_time registration_date_time
     *
     * @return self
     */
    public function setRegistrationDateTime($registration_date_time)
    {
        $this->container['registration_date_time'] = $registration_date_time;

        return $this;
    }

    /**
     * Gets verification_level
     *
     * @return int|null
     */
    public function getVerificationLevel()
    {
        return $this->container['verification_level'];
    }

    /**
     * Sets verification_level
     *
     * @param int|null $verification_level verification_level
     *
     * @return self
     */
    public function setVerificationLevel($verification_level)
    {
        $this->container['verification_level'] = $verification_level;

        return $this;
    }

    /**
     * Gets two_step_verification_type
     *
     * @return \OpenAPI\Client\Model\TwoStepVerificationTypes|null
     */
    public function getTwoStepVerificationType()
    {
        return $this->container['two_step_verification_type'];
    }

    /**
     * Sets two_step_verification_type
     *
     * @param \OpenAPI\Client\Model\TwoStepVerificationTypes|null $two_step_verification_type two_step_verification_type
     *
     * @return self
     */
    public function setTwoStepVerificationType($two_step_verification_type)
    {
        $this->container['two_step_verification_type'] = $two_step_verification_type;

        return $this;
    }

    /**
     * Gets two_step_backup_code
     *
     * @return string|null
     */
    public function getTwoStepBackupCode()
    {
        return $this->container['two_step_backup_code'];
    }

    /**
     * Sets two_step_backup_code
     *
     * @param string|null $two_step_backup_code two_step_backup_code
     *
     * @return self
     */
    public function setTwoStepBackupCode($two_step_backup_code)
    {
        $this->container['two_step_backup_code'] = $two_step_backup_code;

        return $this;
    }

    /**
     * Gets kyc_sefile_blob_guid
     *
     * @return string|null
     */
    public function getKycSefileBlobGuid()
    {
        return $this->container['kyc_sefile_blob_guid'];
    }

    /**
     * Sets kyc_sefile_blob_guid
     *
     * @param string|null $kyc_sefile_blob_guid kyc_sefile_blob_guid
     *
     * @return self
     */
    public function setKycSefileBlobGuid($kyc_sefile_blob_guid)
    {
        $this->container['kyc_sefile_blob_guid'] = $kyc_sefile_blob_guid;

        return $this;
    }

    /**
     * Gets kyc_passport_blob_guid
     *
     * @return string|null
     */
    public function getKycPassportBlobGuid()
    {
        return $this->container['kyc_passport_blob_guid'];
    }

    /**
     * Sets kyc_passport_blob_guid
     *
     * @param string|null $kyc_passport_blob_guid kyc_passport_blob_guid
     *
     * @return self
     */
    public function setKycPassportBlobGuid($kyc_passport_blob_guid)
    {
        $this->container['kyc_passport_blob_guid'] = $kyc_passport_blob_guid;

        return $this;
    }

    /**
     * Gets is_club_account
     *
     * @return bool|null
     */
    public function getIsClubAccount()
    {
        return $this->container['is_club_account'];
    }

    /**
     * Sets is_club_account
     *
     * @param bool|null $is_club_account is_club_account
     *
     * @return self
     */
    public function setIsClubAccount($is_club_account)
    {
        $this->container['is_club_account'] = $is_club_account;

        return $this;
    }

    /**
     * Gets withdraw_locked_till
     *
     * @return int|null
     */
    public function getWithdrawLockedTill()
    {
        return $this->container['withdraw_locked_till'];
    }

    /**
     * Sets withdraw_locked_till
     *
     * @param int|null $withdraw_locked_till withdraw_locked_till
     *
     * @return self
     */
    public function setWithdrawLockedTill($withdraw_locked_till)
    {
        $this->container['withdraw_locked_till'] = $withdraw_locked_till;

        return $this;
    }

    /**
     * Gets ref_id
     *
     * @return string|null
     */
    public function getRefId()
    {
        return $this->container['ref_id'];
    }

    /**
     * Sets ref_id
     *
     * @param string|null $ref_id ref_id
     *
     * @return self
     */
    public function setRefId($ref_id)
    {
        $this->container['ref_id'] = $ref_id;

        return $this;
    }

    /**
     * Gets session_life_time
     *
     * @return int|null
     */
    public function getSessionLifeTime()
    {
        return $this->container['session_life_time'];
    }

    /**
     * Sets session_life_time
     *
     * @param int|null $session_life_time session_life_time
     *
     * @return self
     */
    public function setSessionLifeTime($session_life_time)
    {
        $this->container['session_life_time'] = $session_life_time;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


