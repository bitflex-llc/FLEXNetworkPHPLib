<?php
/**
 * RequestSettingsTokenResponseModel
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * BCFLEX API
 *
 * BCFLEX Public API Documentation
 *
 * The version of the OpenAPI document: v1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * RequestSettingsTokenResponseModel Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class RequestSettingsTokenResponseModel implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'RequestSettingsTokenResponseModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'success' => 'bool',
        'error_type' => '\OpenAPI\Client\Model\SettingsTokenRequestErrorType',
        'token' => 'string',
        'expiration' => 'int',
        'support_pin' => 'int',
        'verification_types' => '\OpenAPI\Client\Model\TwoStepVerificationTypes',
        'session_life_time_minutes' => 'int',
        'verification_level' => 'int',
        'sign_in_notification' => '\OpenAPI\Client\Model\Tuple3',
        'withdraw_notification' => '\OpenAPI\Client\Model\Tuple3',
        'deposit_notification' => '\OpenAPI\Client\Model\Tuple3',
        'listing_notification' => '\OpenAPI\Client\Model\Tuple3',
        'delisting_notification' => '\OpenAPI\Client\Model\Tuple3'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'success' => null,
        'error_type' => null,
        'token' => null,
        'expiration' => 'int64',
        'support_pin' => 'int32',
        'verification_types' => null,
        'session_life_time_minutes' => 'int32',
        'verification_level' => 'int32',
        'sign_in_notification' => null,
        'withdraw_notification' => null,
        'deposit_notification' => null,
        'listing_notification' => null,
        'delisting_notification' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'success' => 'success',
        'error_type' => 'errorType',
        'token' => 'token',
        'expiration' => 'expiration',
        'support_pin' => 'supportPIN',
        'verification_types' => 'verificationTypes',
        'session_life_time_minutes' => 'sessionLifeTimeMinutes',
        'verification_level' => 'verificationLevel',
        'sign_in_notification' => 'signInNotification',
        'withdraw_notification' => 'withdrawNotification',
        'deposit_notification' => 'depositNotification',
        'listing_notification' => 'listingNotification',
        'delisting_notification' => 'delistingNotification'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'success' => 'setSuccess',
        'error_type' => 'setErrorType',
        'token' => 'setToken',
        'expiration' => 'setExpiration',
        'support_pin' => 'setSupportPin',
        'verification_types' => 'setVerificationTypes',
        'session_life_time_minutes' => 'setSessionLifeTimeMinutes',
        'verification_level' => 'setVerificationLevel',
        'sign_in_notification' => 'setSignInNotification',
        'withdraw_notification' => 'setWithdrawNotification',
        'deposit_notification' => 'setDepositNotification',
        'listing_notification' => 'setListingNotification',
        'delisting_notification' => 'setDelistingNotification'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'success' => 'getSuccess',
        'error_type' => 'getErrorType',
        'token' => 'getToken',
        'expiration' => 'getExpiration',
        'support_pin' => 'getSupportPin',
        'verification_types' => 'getVerificationTypes',
        'session_life_time_minutes' => 'getSessionLifeTimeMinutes',
        'verification_level' => 'getVerificationLevel',
        'sign_in_notification' => 'getSignInNotification',
        'withdraw_notification' => 'getWithdrawNotification',
        'deposit_notification' => 'getDepositNotification',
        'listing_notification' => 'getListingNotification',
        'delisting_notification' => 'getDelistingNotification'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['success'] = $data['success'] ?? null;
        $this->container['error_type'] = $data['error_type'] ?? null;
        $this->container['token'] = $data['token'] ?? null;
        $this->container['expiration'] = $data['expiration'] ?? null;
        $this->container['support_pin'] = $data['support_pin'] ?? null;
        $this->container['verification_types'] = $data['verification_types'] ?? null;
        $this->container['session_life_time_minutes'] = $data['session_life_time_minutes'] ?? null;
        $this->container['verification_level'] = $data['verification_level'] ?? null;
        $this->container['sign_in_notification'] = $data['sign_in_notification'] ?? null;
        $this->container['withdraw_notification'] = $data['withdraw_notification'] ?? null;
        $this->container['deposit_notification'] = $data['deposit_notification'] ?? null;
        $this->container['listing_notification'] = $data['listing_notification'] ?? null;
        $this->container['delisting_notification'] = $data['delisting_notification'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets success
     *
     * @return bool|null
     */
    public function getSuccess()
    {
        return $this->container['success'];
    }

    /**
     * Sets success
     *
     * @param bool|null $success success
     *
     * @return self
     */
    public function setSuccess($success)
    {
        $this->container['success'] = $success;

        return $this;
    }

    /**
     * Gets error_type
     *
     * @return \OpenAPI\Client\Model\SettingsTokenRequestErrorType|null
     */
    public function getErrorType()
    {
        return $this->container['error_type'];
    }

    /**
     * Sets error_type
     *
     * @param \OpenAPI\Client\Model\SettingsTokenRequestErrorType|null $error_type error_type
     *
     * @return self
     */
    public function setErrorType($error_type)
    {
        $this->container['error_type'] = $error_type;

        return $this;
    }

    /**
     * Gets token
     *
     * @return string|null
     */
    public function getToken()
    {
        return $this->container['token'];
    }

    /**
     * Sets token
     *
     * @param string|null $token token
     *
     * @return self
     */
    public function setToken($token)
    {
        $this->container['token'] = $token;

        return $this;
    }

    /**
     * Gets expiration
     *
     * @return int|null
     */
    public function getExpiration()
    {
        return $this->container['expiration'];
    }

    /**
     * Sets expiration
     *
     * @param int|null $expiration expiration
     *
     * @return self
     */
    public function setExpiration($expiration)
    {
        $this->container['expiration'] = $expiration;

        return $this;
    }

    /**
     * Gets support_pin
     *
     * @return int|null
     */
    public function getSupportPin()
    {
        return $this->container['support_pin'];
    }

    /**
     * Sets support_pin
     *
     * @param int|null $support_pin support_pin
     *
     * @return self
     */
    public function setSupportPin($support_pin)
    {
        $this->container['support_pin'] = $support_pin;

        return $this;
    }

    /**
     * Gets verification_types
     *
     * @return \OpenAPI\Client\Model\TwoStepVerificationTypes|null
     */
    public function getVerificationTypes()
    {
        return $this->container['verification_types'];
    }

    /**
     * Sets verification_types
     *
     * @param \OpenAPI\Client\Model\TwoStepVerificationTypes|null $verification_types verification_types
     *
     * @return self
     */
    public function setVerificationTypes($verification_types)
    {
        $this->container['verification_types'] = $verification_types;

        return $this;
    }

    /**
     * Gets session_life_time_minutes
     *
     * @return int|null
     */
    public function getSessionLifeTimeMinutes()
    {
        return $this->container['session_life_time_minutes'];
    }

    /**
     * Sets session_life_time_minutes
     *
     * @param int|null $session_life_time_minutes session_life_time_minutes
     *
     * @return self
     */
    public function setSessionLifeTimeMinutes($session_life_time_minutes)
    {
        $this->container['session_life_time_minutes'] = $session_life_time_minutes;

        return $this;
    }

    /**
     * Gets verification_level
     *
     * @return int|null
     */
    public function getVerificationLevel()
    {
        return $this->container['verification_level'];
    }

    /**
     * Sets verification_level
     *
     * @param int|null $verification_level verification_level
     *
     * @return self
     */
    public function setVerificationLevel($verification_level)
    {
        $this->container['verification_level'] = $verification_level;

        return $this;
    }

    /**
     * Gets sign_in_notification
     *
     * @return \OpenAPI\Client\Model\Tuple3|null
     */
    public function getSignInNotification()
    {
        return $this->container['sign_in_notification'];
    }

    /**
     * Sets sign_in_notification
     *
     * @param \OpenAPI\Client\Model\Tuple3|null $sign_in_notification sign_in_notification
     *
     * @return self
     */
    public function setSignInNotification($sign_in_notification)
    {
        $this->container['sign_in_notification'] = $sign_in_notification;

        return $this;
    }

    /**
     * Gets withdraw_notification
     *
     * @return \OpenAPI\Client\Model\Tuple3|null
     */
    public function getWithdrawNotification()
    {
        return $this->container['withdraw_notification'];
    }

    /**
     * Sets withdraw_notification
     *
     * @param \OpenAPI\Client\Model\Tuple3|null $withdraw_notification withdraw_notification
     *
     * @return self
     */
    public function setWithdrawNotification($withdraw_notification)
    {
        $this->container['withdraw_notification'] = $withdraw_notification;

        return $this;
    }

    /**
     * Gets deposit_notification
     *
     * @return \OpenAPI\Client\Model\Tuple3|null
     */
    public function getDepositNotification()
    {
        return $this->container['deposit_notification'];
    }

    /**
     * Sets deposit_notification
     *
     * @param \OpenAPI\Client\Model\Tuple3|null $deposit_notification deposit_notification
     *
     * @return self
     */
    public function setDepositNotification($deposit_notification)
    {
        $this->container['deposit_notification'] = $deposit_notification;

        return $this;
    }

    /**
     * Gets listing_notification
     *
     * @return \OpenAPI\Client\Model\Tuple3|null
     */
    public function getListingNotification()
    {
        return $this->container['listing_notification'];
    }

    /**
     * Sets listing_notification
     *
     * @param \OpenAPI\Client\Model\Tuple3|null $listing_notification listing_notification
     *
     * @return self
     */
    public function setListingNotification($listing_notification)
    {
        $this->container['listing_notification'] = $listing_notification;

        return $this;
    }

    /**
     * Gets delisting_notification
     *
     * @return \OpenAPI\Client\Model\Tuple3|null
     */
    public function getDelistingNotification()
    {
        return $this->container['delisting_notification'];
    }

    /**
     * Sets delisting_notification
     *
     * @param \OpenAPI\Client\Model\Tuple3|null $delisting_notification delisting_notification
     *
     * @return self
     */
    public function setDelistingNotification($delisting_notification)
    {
        $this->container['delisting_notification'] = $delisting_notification;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


