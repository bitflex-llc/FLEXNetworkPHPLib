<?php
/**
 * PostSignInResponse
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * BCFLEX API
 *
 * BCFLEX Public API Documentation
 *
 * The version of the OpenAPI document: v1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * PostSignInResponse Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class PostSignInResponse implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'PostSignInResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'result' => '\OpenAPI\Client\Model\SignInResponseResult',
        'auth_token' => 'string',
        'expiry_timestamp' => 'int',
        'two_factor_type' => '\OpenAPI\Client\Model\TwoStepVerificationTypes',
        'email' => 'string',
        'user_id' => 'string',
        'remember_device_token' => 'string',
        'requre_pin_setting' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'result' => null,
        'auth_token' => null,
        'expiry_timestamp' => 'int64',
        'two_factor_type' => null,
        'email' => null,
        'user_id' => null,
        'remember_device_token' => null,
        'requre_pin_setting' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'result' => 'result',
        'auth_token' => 'authToken',
        'expiry_timestamp' => 'expiryTimestamp',
        'two_factor_type' => 'twoFactorType',
        'email' => 'email',
        'user_id' => 'userId',
        'remember_device_token' => 'rememberDeviceToken',
        'requre_pin_setting' => 'requrePinSetting'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'result' => 'setResult',
        'auth_token' => 'setAuthToken',
        'expiry_timestamp' => 'setExpiryTimestamp',
        'two_factor_type' => 'setTwoFactorType',
        'email' => 'setEmail',
        'user_id' => 'setUserId',
        'remember_device_token' => 'setRememberDeviceToken',
        'requre_pin_setting' => 'setRequrePinSetting'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'result' => 'getResult',
        'auth_token' => 'getAuthToken',
        'expiry_timestamp' => 'getExpiryTimestamp',
        'two_factor_type' => 'getTwoFactorType',
        'email' => 'getEmail',
        'user_id' => 'getUserId',
        'remember_device_token' => 'getRememberDeviceToken',
        'requre_pin_setting' => 'getRequrePinSetting'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['result'] = $data['result'] ?? null;
        $this->container['auth_token'] = $data['auth_token'] ?? null;
        $this->container['expiry_timestamp'] = $data['expiry_timestamp'] ?? null;
        $this->container['two_factor_type'] = $data['two_factor_type'] ?? null;
        $this->container['email'] = $data['email'] ?? null;
        $this->container['user_id'] = $data['user_id'] ?? null;
        $this->container['remember_device_token'] = $data['remember_device_token'] ?? null;
        $this->container['requre_pin_setting'] = $data['requre_pin_setting'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets result
     *
     * @return \OpenAPI\Client\Model\SignInResponseResult|null
     */
    public function getResult()
    {
        return $this->container['result'];
    }

    /**
     * Sets result
     *
     * @param \OpenAPI\Client\Model\SignInResponseResult|null $result result
     *
     * @return self
     */
    public function setResult($result)
    {
        $this->container['result'] = $result;

        return $this;
    }

    /**
     * Gets auth_token
     *
     * @return string|null
     */
    public function getAuthToken()
    {
        return $this->container['auth_token'];
    }

    /**
     * Sets auth_token
     *
     * @param string|null $auth_token auth_token
     *
     * @return self
     */
    public function setAuthToken($auth_token)
    {
        $this->container['auth_token'] = $auth_token;

        return $this;
    }

    /**
     * Gets expiry_timestamp
     *
     * @return int|null
     */
    public function getExpiryTimestamp()
    {
        return $this->container['expiry_timestamp'];
    }

    /**
     * Sets expiry_timestamp
     *
     * @param int|null $expiry_timestamp expiry_timestamp
     *
     * @return self
     */
    public function setExpiryTimestamp($expiry_timestamp)
    {
        $this->container['expiry_timestamp'] = $expiry_timestamp;

        return $this;
    }

    /**
     * Gets two_factor_type
     *
     * @return \OpenAPI\Client\Model\TwoStepVerificationTypes|null
     */
    public function getTwoFactorType()
    {
        return $this->container['two_factor_type'];
    }

    /**
     * Sets two_factor_type
     *
     * @param \OpenAPI\Client\Model\TwoStepVerificationTypes|null $two_factor_type two_factor_type
     *
     * @return self
     */
    public function setTwoFactorType($two_factor_type)
    {
        $this->container['two_factor_type'] = $two_factor_type;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string|null $email email
     *
     * @return self
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets user_id
     *
     * @return string|null
     */
    public function getUserId()
    {
        return $this->container['user_id'];
    }

    /**
     * Sets user_id
     *
     * @param string|null $user_id user_id
     *
     * @return self
     */
    public function setUserId($user_id)
    {
        $this->container['user_id'] = $user_id;

        return $this;
    }

    /**
     * Gets remember_device_token
     *
     * @return string|null
     */
    public function getRememberDeviceToken()
    {
        return $this->container['remember_device_token'];
    }

    /**
     * Sets remember_device_token
     *
     * @param string|null $remember_device_token remember_device_token
     *
     * @return self
     */
    public function setRememberDeviceToken($remember_device_token)
    {
        $this->container['remember_device_token'] = $remember_device_token;

        return $this;
    }

    /**
     * Gets requre_pin_setting
     *
     * @return bool|null
     */
    public function getRequrePinSetting()
    {
        return $this->container['requre_pin_setting'];
    }

    /**
     * Sets requre_pin_setting
     *
     * @param bool|null $requre_pin_setting requre_pin_setting
     *
     * @return self
     */
    public function setRequrePinSetting($requre_pin_setting)
    {
        $this->container['requre_pin_setting'] = $requre_pin_setting;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


